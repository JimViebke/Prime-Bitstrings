
Notes for benchmarking

Benchmark: performing full 2->n tests from p11 to p11 + 100 million.

30899/31213/31276 ms : Basic implementation
16690/16602/16832 ms : Added sieve in size 1,000,000 (~46% faster)
 7045/ 6964/ 7003 ms : Check for prime-numbered popcounts of candidate p2 before doing prime checks. (~58% faster)
 4850/ 4860/ 4834 ms : Check if gcd(abs(popcount(odd bits) - popcount(even bits)), 1155) equals one before doing prime checks. (~30% faster)
 
=== change benchmark from p11 + 100 million to p11 + 500 million) ===

22163/22106/22096 ms : Re-running previous implementation with larger benchmark
21862/21851/21819 ms : Only convert base 2 value to char array once (~1% faster)

20847 ms			: Change toolset to VS2022 and C++20
